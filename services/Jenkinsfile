podTemplate(label: 'build', containers: [
    containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true)
  ],
  volumes: [
    persistentVolumeClaim(mountPath: '/var/run/docker.sock', claimName: 'jenkins-pvc', readOnly: false),
  ]
  ) {
    node('build') {
      container('docker') {
        sh 'docker version'
      }        
    }  
  }
/* podTemplate(yaml: '''
    apiVersion: v1
    kind: Pod
    spec:
      containers:
      - name: docker
        image: docker:latest
        command:
        - cat
        args:
        - 99d
        volumeMounts:
            - mountPath: /var/run/docker.sock
              name: db 
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: jenkins-pvc
''') {
  node(POD_LABEL) {
    stage('Build') {
      container('docker') {
        stage('Building') {
          sh 'apk update'  
          sh 'apk add git'
          withCredentials([usernamePassword(credentialsId: '84bffb7c-a3bf-44f4-9471-977870eeed88', 
          passwordVariable: 'pass', usernameVariable: 'user')]){
            sh label: 'Login to Github', script: '''
sh git clone https://$user:$pass@github.com/JuanDavidBallesteros/rental_app.git . '''
          }
          sh 'docker build -t auth .'
        }
        
      }
    }

  }
} */
/* podTemplate(label: 'build', containers: [
    containerTemplate(name: 'jenkins-test', image: 'ubuntu', command: 'cat', ttyEnabled: true )
    
  ],
  volumes: [
    persistentVolumeClaim(mountPath: '/var/run/docker.sock', claimName: 'jenkins-pvc', readOnly: false),
  ]
  ) {
  node('build') {
    stage('Build') {
      container('docker') {
        stage('Building') {
          sh 'apt update'  
          sh 'apt-get isntall -y git'
          withCredentials([usernamePassword(credentialsId: '84bffb7c-a3bf-44f4-9471-977870eeed88', 
          passwordVariable: 'pass', usernameVariable: 'user')]){
            sh label: 'Login to Github', script: '''
git clone https://$user:$pass@github.com/JuanDavidBallesteros/rental_app.git . '''
          }
          sh ''' apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
            '''
          sh 'mkdir -p /etc/apt/keyrings'
          sh 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg'
          sh '''echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  '''
          sh 'apt-get update'
          sh 'apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin'
          sh 'docker build -t auth .'
        }
        
      }
    }

  }
}

 */
